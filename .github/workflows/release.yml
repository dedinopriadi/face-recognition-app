name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build application
      run: npm run build
    
    - name: Generate changelog
      id: changelog
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          
          // Get commits since last tag
          const tag = context.ref.replace('refs/tags/', '');
          const previousTag = execSync('git describe --tags --abbrev=0 HEAD~1', { encoding: 'utf8' }).trim();
          
          const commits = execSync(`git log ${previousTag}..HEAD --pretty=format:"- %s (%h)"`, { encoding: 'utf8' });
          
          const changelog = `## What's Changed in ${tag}
          
          ### üöÄ Features
          ${commits.split('\n').filter(commit => 
            commit.includes('feat:') || commit.includes('‚ú®')
          ).join('\n')}
          
          ### üêõ Bug Fixes
          ${commits.split('\n').filter(commit => 
            commit.includes('fix:') || commit.includes('üêõ')
          ).join('\n')}
          
          ### üîß Improvements
          ${commits.split('\n').filter(commit => 
            commit.includes('improve:') || commit.includes('üîß')
          ).join('\n')}
          
          ### üìù Documentation
          ${commits.split('\n').filter(commit => 
            commit.includes('docs:') || commit.includes('üìù')
          ).join('\n')}
          
          ### üßπ Chores
          ${commits.split('\n').filter(commit => 
            commit.includes('chore:') || commit.includes('üßπ')
          ).join('\n')}
          
          ---
          *Full commit list: ${commits}*`;
          
          core.setOutput('changelog', changelog);
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
    
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create release notes
      run: |
        echo "üìù Release ${{ github.ref }} created successfully!"
        echo "Changelog: ${{ steps.changelog.outputs.changelog }}"
        
        # Add your release notification logic here
        # Example for Slack:
        # curl -X POST -H 'Content-type: application/json' \
        #   --data '{"text":"üìù New release created: ${{ github.ref }}"}' \
        #   ${{ secrets.SLACK_WEBHOOK_URL }}
    
    - name: Notify release
      run: |
        echo "üéâ Release ${{ github.ref }} has been published!"
        echo "Changelog: ${{ steps.changelog.outputs.changelog }}"
        
        # Add your release notification logic here
        # Example for Slack:
        # curl -X POST -H 'Content-type: application/json' \
        #   --data '{"text":"üéâ New release published: ${{ github.ref }}"}' \
        #   ${{ secrets.SLACK_WEBHOOK_URL }} 